//==================================================================================================
// PROJECT
//==================================================================================================
version = project.hasProperty("version") ? project.property("version") : "1.0.0"
group = project.group
buildscript {
    repositories {
        jcenter()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.1.0'
        classpath 'io.fabric.tools:gradle:1.+'
    }
}
println "=========== ${project.group}:${project.name}:${version} - (${System.getenv("CIRCLE_BUILD_NUM")}) ==========="
//==================================================================================================
// ANDROID
//==================================================================================================
apply plugin: 'com.android.application'
android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    defaultConfig {
        applicationId "com.cerberillo.library.demo"
        minSdkVersion 10
        targetSdkVersion 23
        versionCode System.getenv("CIRCLE_BUILD_NUM") ? System.getenv("CIRCLE_BUILD_NUM").toInteger() : 1
        versionName version
    }

    buildTypes {
        debug {
            ext.enableCrashlytics = false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile project(':library')

    testCompile 'junit:junit:4.12'
}
//==================================================================================================
// FABRIC
//==================================================================================================
if (System.getenv("CIRCLECI")) {
    apply plugin: 'io.fabric'
    try {
        File file = new File("${project.projectDir.absolutePath}/fabric.properties")
        if (!file.canRead()) {
            file.createNewFile()
            file << "apiKey=${System.getenv("FABRIC_API_KEY")}\n"
            file << "apiSecret=${System.getenv("FABRIC_API_SECRET")}\n"
        }
        println "======== FABRIC Success ========"
    } catch (IOException ioException) {
        println "======== FABRIC Error ========"
        println "${ioException.toString()}"
        println "------------------------------"
    }
}